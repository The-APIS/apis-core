version: "3"

services:
  gateway:
    build:
      context: .
      dockerfile: ./gateway/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./gateway/src:/app
      - ./share:/app/share
      - ./share/models:/app/share/models
      - ./share/sequelize/migrations/client:/app/share/sequelize/migrations
    ports:
      - "8100:80"
    links:
      - postgres
      - redis

  binance-smart-chain-rpc:
    build:
      context: .
      dockerfile: ./ethereum-rpc/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
      POSTGRES_DATABASE: BinanceSmartChainTestnet
      BINANCE_SMART_CHAIN_HTTPS_ADDR: ${BINANCE_SMART_CHAIN_TESTNET_HTTPS_ADDR}
      CHAIN_NETWORK_HTTPS_ADDR: ${BINANCE_SMART_CHAIN_TESTNET_HTTPS_ADDR}
    ports:
      - "${BINANCE_SMART_CHAIN_RPC_PORT:-8105}:80"
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./ethereum-rpc/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
      - ./share/sequelize/migrations/ethereum:/app/constructors/sequelize/migrations
    links:
      - postgres
      - redis

  bitcoin-rpc:
    build:
      context: .
      dockerfile: ./bitcoin-rpc/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
      POSTGRES_DATABASE: BitcoinTestnet
    ports:
      - "${BITCOIN_RPC_PORT:-8101}:80"
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./bitcoin-rpc/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
      - ./share/migrations/bitcoin:/app/constructors/sequelize/migrations
    links:
      - bitcoin-core
      - postgres
      - redis

  ethereum-rpc:
    build:
      context: .
      dockerfile: ./ethereum-rpc/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
      POSTGRES_DATABASE: EthereumRinkeby
      CHAIN_NETWORK_HTTPS_ADDR: ${ETHEREUM_HTTPS_ADDR}
    ports:
      - "${ETHEREUM_RPC_PORT:-8102}:80"
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./ethereum-rpc/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
      - ./share/migrations/ethereum:/app/constructors/sequelize/migrations
    links:
      - postgres
      - redis

  bitcoin-listener:
    build:
      context: .
      dockerfile: ./bitcoin-listener/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
      POSTGRES_DATABASE: BitcoinTestnet
    ports:
      - "${BITCOIN_LISTENER_PORT:-8103}:80"
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./bitcoin-listener/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
      - ./share/migrations/bitcoin:/app/constructors/sequelize/migrations
    links:
      - bitcoin-core
      - postgres
      - redis

  ethereum-listener:
    build:
      context: .
      dockerfile: ./ethereum-listener/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
      POSTGRES_DATABASE: EthereumRinkeby
      DEBUG: ethereum-listener:*
    env_file:
      - .env
    ports:
      - "${ETHEREUM_LISTENER_PORT:-8104}:80"
    volumes:
      - /app/node_modules
      - ./ethereum-listener/src:/app
      - ./share:/app/share
    links:
      - postgres
      - redis

  bitcoin-core:
    image: ruimarinho/bitcoin-core:0.20.1
    ports:
      - "8332:8332"
      - "9332:9332"
      - "8333:8333"
      - "9333:9333"
      - "19332:19332"
      - "19333:19333"
      - "29332:29332"
    env_file:
      - .env
    command:
      - -regtest=1
      - -fallbackfee=0.000001
      - -listen=1
      - -txindex=1
      - -server=1
      - -printtoconsole
      - -port=19332
      - -rpcport=19333
      - -rpcallowip=127.0.0.1
      - -rpcallowip=172.17.0.0
      - -rpcallowip=172.17.0.0/8
      - -rpcallowip=172.17.0.0/16
      - -rpcallowip=192.168.0.0/16
      - -rpcbind=0.0.0.0
      - -rpcuser=bitcoin_rpc_user
      - -rpcpassword=bitcoin_rpc_pass
      - -zmqpubrawtx=tcp://*:29332
      - -zmqpubrawblock=tcp://*:29332
      - -zmqpubhashblock=tcp://*:29332
      - -zmqpubhashtx=tcp://*:29332
      - -keypool=100
      - -deprecatedrpc=generate

  postgres:
    image: postgres:13
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - "./.data/postgres:/var/lib/postgresql/data"

  redis:
    image: "redis:alpine"
    # command: redis-server --requirepass sOmE_sEcUrE_pAsS
    command: redis-server
    ports:
      - "6379:6379"
    # volumes:
    #  - $PWD/redis-data:/var/lib/redis
    #   - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master

  static:
    build:
      context: ./static
    ports:
      - "8080:8080"
    environment:
      FOLDER: /web
    volumes:
      - ./static/src:/web

  e2e:
    # the Docker image to use from https://github.com/cypress-io/cypress-docker-images
    image: "cypress/included:3.2.0"
    depends_on:
      - gateway
    env_file:
      - .env
    # share the current folder as volume to avoid copying
    working_dir: /e2e
    volumes:
      - ./e2e:/e2e

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   env_file:
  #     - .env

  developers:
    build:
      context: .
      dockerfile: ./developers/Dockerfile
    command: npm start
    environment:
      NODE_ENV: development
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./developers:/app
    ports:
      - "8099:3000"
